{
  "name": "nfse-sp-service",
  "version": "0.1.2",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "tsx watch src/server.ts",
    "dev:local": "cross-env NODE_ENV=development PORT=3000 JWT_SECRET=change_this_development_secret_please DATABASE_URL=postgresql://nfse:nfse@localhost:5432/nfse?schema=public METRICS_ENABLED=1 tsx watch src/server.ts",
    "dev:mem": "cross-env NODE_ENV=development PORT=3000 JWT_SECRET=change_this_development_secret_please IN_MEMORY_DB=1 METRICS_ENABLED=1 tsx watch src/server.ts",
    "dev:3001": "cross-env PORT=3001 tsx watch src/server.ts",
    "build": "tsup src/server.ts src/app.ts --format esm,cjs --dts --splitting --clean",
    "start": "node dist/server.js",
    "start:mem": "cross-env NODE_ENV=development PORT=3000 JWT_SECRET=change_this_development_secret_please IN_MEMORY_DB=1 METRICS_ENABLED=1 node dist/server.js",
    "db:up": "docker compose up -d db",
    "db:down": "docker compose down",
    "dev:up": "powershell -ExecutionPolicy Bypass -File ./scripts/dev-up.ps1",
    "health": "powershell -ExecutionPolicy Bypass -File ./scripts/health.ps1",
    "smoke:fast": "powershell -ExecutionPolicy Bypass -File ./scripts/smoke.ps1 -SkipArtifacts",
    "smoke:emit-only": "powershell -ExecutionPolicy Bypass -File ./scripts/smoke.ps1 -SkipArtifacts -NoCancel",
    "smoke:report": "powershell -NoProfile -ExecutionPolicy Bypass -Command \"& { $ts = Get-Date -Format yyyyMMdd_HHmmss; ./scripts/smoke.ps1 -SkipArtifacts -NoCancel -AutoStartDev -JsonOut \\\"./smoke_$ts.json\\\" }\"",
    "smoke:report:summary": "powershell -NoProfile -ExecutionPolicy Bypass -Command \"& { $last = Get-ChildItem -Path . -Filter 'smoke_*.json' | Sort-Object LastWriteTime -Descending | Select-Object -First 1; if ($null -eq $last) { Write-Host 'Nenhum smoke_*.json encontrado'; exit 1 }; npx tsx scripts/report-summary.ts \"$($last.FullName)\" }\"",
    "smoke:summary": "tsx scripts/report-summary.ts",
    "lint": "eslint . --ext .ts,.tsx",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:migrate:local": "cross-env DATABASE_URL=postgresql://nfse:nfse@localhost:5432/nfse?schema=public prisma migrate dev",
    "prisma:generate:local": "cross-env DATABASE_URL=postgresql://nfse:nfse@localhost:5432/nfse?schema=public prisma generate",
    "token": "tsx scripts/gen-token.ts",
    "openapi:dump": "tsx scripts/openapi-dump.ts",
    "cli": "tsx scripts/cli.ts",
    "openapi:types": "npm run -s openapi:dump > openapi.json && npx openapi-typescript openapi.json -o src/types/openapi.d.ts",
    "port:free": "powershell -ExecutionPolicy Bypass -File ./scripts/free-port.ps1 -Port 3000",
    "dev:mem:win": "powershell -ExecutionPolicy Bypass -File ./scripts/start-dev-mem.ps1 -FreePort",
    "dev:win:start": "powershell -ExecutionPolicy Bypass -File ./scripts/dev-start-and-smoke.ps1 -FreePort",
    "dev:win:start-report": "powershell -ExecutionPolicy Bypass -File ./scripts/dev-start-and-smoke.ps1 -FreePort -Report",
    "dev:win:emit-only": "powershell -ExecutionPolicy Bypass -File ./scripts/dev-start-and-smoke.ps1 -FreePort -SkipArtifacts -NoCancel",
    "dev:win:emit-report": "powershell -ExecutionPolicy Bypass -File ./scripts/dev-start-and-smoke.ps1 -FreePort -SkipArtifacts -NoCancel -Report",
    "verify:xml": "tsx scripts/verify-xml.ts",
    "check:pfx": "tsx scripts/check-pfx.ts",
    "check:agent": "tsx scripts/check-agent.ts",
    "demo:emit": "powershell -ExecutionPolicy Bypass -File ./scripts/emit-sample.ps1",
    "demo:quick": "powershell -ExecutionPolicy Bypass -File ./scripts/demo-quick.ps1",
    "demo:real": "powershell -ExecutionPolicy Bypass -File ./scripts/emit-real.ps1 -Pretty",
    "client:demo": "tsx scripts/client-demo.ts",
    "test": "jest --passWithNoTests",
    "coverage": "jest --coverage --passWithNoTests",
    "smoke": "powershell -ExecutionPolicy Bypass -File ./scripts/smoke.ps1",
    "deps:check": "npm ci --dry-run 2>&1 | grep -q \"npm ci can only install\" && (echo \"❌ Root package-lock.json is outdated\" && exit 1) || echo \"✅ Root lockfile OK\" && cd ui && npm ci --dry-run 2>&1 | grep -q \"npm ci can only install\" && (echo \"❌ UI package-lock.json is outdated\" && exit 1) || echo \"✅ UI lockfile OK\""
  },
  "dependencies": {
    "@fastify/cors": "^10.0.0",
    "@fastify/helmet": "^12.0.0",
    "@fastify/jwt": "^10.0.0",
    "@fastify/rate-limit": "^10.0.0",
    "@prisma/client": "^5.17.0",
    "@xmldom/xmldom": "^0.8.10",
    "axios": "^1.7.4",
    "docker": "^1.0.0",
    "fastify": "^5.0.0",
    "jsonwebtoken": "^9.0.2",
    "node-forge": "^1.3.1",
    "pino": "^9.0.0",
    "pino-pretty": "^13.1.1",
    "prisma": "^5.17.0",
    "xml-crypto": "6.1.2",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@fastify/swagger": "^9.5.1",
    "@fastify/swagger-ui": "^5.2.3",
    "@types/jest": "^29.5.12",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/node": "^20.11.30",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "cross-env": "^7.0.3",
    "eslint": "8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "husky": "^9.0.11",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.2",
    "openapi-typescript": "^7.5.1",
    "prettier": "^3.3.2",
    "ts-jest": "^29.1.2",
    "tsup": "^8.1.0",
    "tsx": "^4.7.0",
    "typescript": "^5.9.2"
  },
  "lint-staged": {
    "src/**/*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
